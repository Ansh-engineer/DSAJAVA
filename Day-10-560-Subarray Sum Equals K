// Leetcode --> 560 --> Subarray Sum Equals K

// Approach --> 1st --> using Brute Force

// Code Below;+ --> 


class Solution {
    public int subarraySum(int[] arr, int k) {
        int n = arr.length;
        int cnt=0;
        for(int i=0;i<n;i++){
            int sum=0;
            for(int j=i;j<n;j++){
                sum += arr[j];
                if(sum==k) cnt++;
            }  
        }
        return cnt;
    }
}


// Time Complexity --> O(nÂ²) && Space Complexity --> O(1)


-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -    -  -  -  -  -  -  -



---------------------------------------------------------------------------  Approach 2nd is better than Approach 1st  -----------------------------------------------------------------------------------------------



// Approach -2nd --> Using Prefix Sum

// Code Below -->


class Solution {
    public int subarraySum(int[] arr, int k) {
        int n =arr.length;
        for(int i=1;i<n;i++){
           arr[i]+=arr[i-1];
        }

    HashMap<Integer,Integer> map = new HashMap<>();
    int cnt =0;

        for(int i=0;i<n;i++){
             int ele = arr[i];
             if(ele==k) cnt++;
             int res = ele - k;
             if(map.containsKey(res)){
                cnt+=map.get(res);
             }

             map.put(ele,map.getOrDefault(ele,0)+1);
        }
        return cnt;
    }
}


// Time Complexity --> O(n) && Space Complexity --> O(n)



-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
